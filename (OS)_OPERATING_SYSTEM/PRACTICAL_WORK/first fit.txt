#include<bits/stdc++.h>
using namespace std;
void allocateMemory(int processSize,int processno,vector<int>&partitions,vector<vector<int>>&allocations) {
        for (int i = 0; i < partitions.size(); ++i) {
            if (partitions[i] >= processSize) {
                allocations[i].push_back(processno);
                partitions[i] -= processSize;
                return;
            }
        }
        cout<<"unable to fit process"<<processno<<" due to lack of space"<<endl;
}

void table(vector<int>&partitions,vector<vector<int>>&allocations) {
      for (int i = 0; i < partitions.size(); ++i) {
            cout << "Partition " << i + 1 << ": ";
            if (allocations[i].size()!=0){
		for(auto it:allocations[i]){
		   cout<<" "<<"process"<<it;
		}
            }
            else
                cout << "Empty";
            cout << endl;
      }
}
int main()
{
  vector<int>partitions={100,150,300,200};
  vector<vector<int>>allocations(4);
  allocateMemory(100,1,partitions,allocations);
  allocateMemory(180,2,partitions,allocations);
  allocateMemory(250,3,partitions,allocations);
  table(partitions,allocations);
  return 0;
}  
